plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.MKCollege'
version = '0.0.1-SNAPSHOT'
description = 'DPDD_Year2_Student_Management_System'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// Spring Boot Starter Validation (includes Jakarta Validation API)
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Only needed if you want to explicitly lock Hibernate Validator version
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-jdbc'


}

tasks.named('test') {
	useJUnitPlatform()
}

task cleanTestResults(type: Delete) {
	delete fileTree("${buildDir}/test-results") {
		include '**/*'
	}
}





test {
	reports.html.required = false
	reports.junitXml.required = false
}
